#!/bin/bash

CPUS=4
RAM=4G

APP=`basename $0`

function echoerr {
    echo "$@" >&2
}

function usage {
	echoerr "$APP - launch a VM on the specified disk image(s)."
	echoerr "The VM is configured with $CPUS CPUs and $RAM of RAM."
    echoerr ""
    echoerr "Usage: $APP -d disk -i iso"
    echoerr "disk    the disk image to use (typically a .qcow file)"
    echoerr "iso     the CD/DVD-ROM image to use (typically an .iso file)"
    echoerr ""
    echoerr "At least one image must be specified."
    exit 1
}

if [ $# -lt 1 ]; then
    usage
fi

while [[ $# -gt 0 ]]; do
  case $1 in
    -d)
      disk="$2"
      shift # past argument
      shift # past value
      ;;
    -i)
      iso="$2"
      shift # past argument
      shift # past value
      ;;
    *)
      echo "Unknown argument $1"
      exit 1
      ;;
  esac
done

if [ ! -z $disk ]; then
    disk_drive="-drive file=$disk,index=0,media=disk,format=qcow2,discard=unmap,detect-zeroes=unmap,if=virtio"
fi

if [ ! -z $iso ]; then
    cdrom_drive="-drive file=$iso,index=1,media=cdrom,format=raw,read-only=on"
fi

network="-nic user,model=virtio-net-pci"

guest_agent="-device virtio-serial -device virtserialport,chardev=qga0,name=org.qemu.guest_agent.0 -chardev socket,path=path_to_sock_file,server=on,wait=off,id=qga0"

# -boot order=d tells QEMU to boot to CDROM first
qemu-system-x86_64 -enable-kvm -cpu host -smp cpus=$CPUS -m $RAM -boot order=d $disk_drive $cdrom_drive -vga virtio -device virtio-serial-pci $network $guest_agent
